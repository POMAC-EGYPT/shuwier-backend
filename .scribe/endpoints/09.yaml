name: 'Admin Skills Management'
description: |-

  APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
  and can be associated with categories for better organization.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/skills
    metadata:
      groupName: 'Admin Skills Management'
      groupDescription: |-

        APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
        and can be associated with categories for better organization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Skills'
      description: |-
        Retrieve a paginated list of all skills in the system.
        This endpoint supports search functionality and pagination.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'optional Search term to filter skills by name (Arabic or English).'
        required: false
        example: '"PHP"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optional Number of items per page (1-100). Defaults to 10.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: '"PHP"'
      per_page: 15
    bodyParameters:
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      search: vmqeopfuudtdsufvyvddq
      per_page: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Skills retrieved successfully",
            "data": {
              "data": [
                {
                  "id": 1,
                  "name_ar": "برمجة PHP",
                  "name_en": "PHP Programming",
                  "category_id": 2,
                  "category": {
                    "id": 2,
                    "name_ar": "برمجة",
                    "name_en": "Programming"
                  },
                  "created_at": "2024-01-15T10:30:00.000000Z",
                  "updated_at": "2024-01-15T10:30:00.000000Z"
                },
                {
                  "id": 2,
                  "name_ar": "تصميم جرافيك",
                  "name_en": "Graphic Design",
                  "category_id": 3,
                  "category": {
                    "id": 3,
                    "name_ar": "تصميم",
                    "name_en": "Design"
                  },
                  "created_at": "2024-01-16T14:20:00.000000Z",
                  "updated_at": "2024-01-16T14:20:00.000000Z"
                }
              ],
              "current_page": 1,
              "first_page_url": "http://127.0.0.1:8000/api/admin/skills?page=1",
              "from": 1,
              "last_page": 5,
              "last_page_url": "http://127.0.0.1:8000/api/admin/skills?page=5",
              "next_page_url": "http://127.0.0.1:8000/api/admin/skills?page=2",
              "path": "http://127.0.0.1:8000/api/admin/skills",
              "per_page": 10,
              "prev_page_url": null,
              "to": 10,
              "total": 50
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "Search term must not exceed 255 characters",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated",
            "status": false,
            "error_num": 401,
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/skills
    metadata:
      groupName: 'Admin Skills Management'
      groupDescription: |-

        APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
        and can be associated with categories for better organization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New Skill'
      description: |-
        Create a new skill in the system. Skills must have names in both Arabic and English
        and must be associated with a valid category.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name_ar:
        name: name_ar
        description: 'The Arabic name of the skill. Must be unique and between 2-100 characters.'
        required: true
        example: '"برمجة PHP"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_en:
        name: name_en
        description: 'The English name of the skill. Must be unique and between 2-100 characters.'
        required: true
        example: '"PHP Programming"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the category this skill belongs to. Must exist in categories table.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name_ar: '"برمجة PHP"'
      name_en: '"PHP Programming"'
      category_id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Skill created successfully",
            "data": {
              "id": 15,
              "name_ar": "برمجة PHP",
              "name_en": "PHP Programming",
              "category_id": 2,
              "category": {
                "id": 2,
                "name_ar": "برمجة",
                "name_en": "Programming"
              },
              "created_at": "2024-01-20T09:15:30.000000Z",
              "updated_at": "2024-01-20T09:15:30.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "The Arabic name has already been taken",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "The name ar field is required",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "This category is not a parent category",
            "status": false,
            "error_num": 400,
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated",
            "status": false,
            "error_num": 401,
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/skills/{id}'
    metadata:
      groupName: 'Admin Skills Management'
      groupDescription: |-

        APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
        and can be associated with categories for better organization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Skill Details'
      description: |-
        Retrieve detailed information about a specific skill by its ID.
        Returns the skill data including its associated category information.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the skill to retrieve.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Success",
            "data": {
              "id": 5,
              "name_ar": "تصميم واجهات المستخدم",
              "name_en": "UI Design",
              "category_id": 3,
              "category": {
                "id": 3,
                "name_ar": "تصميم",
                "name_en": "Design"
              },
              "created_at": "2024-01-18T16:45:22.000000Z",
              "updated_at": "2024-01-19T10:30:15.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Skill not found",
            "status": false,
            "error_num": 400,
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated",
            "status": false,
            "error_num": 401,
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/skills/{id}'
    metadata:
      groupName: 'Admin Skills Management'
      groupDescription: |-

        APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
        and can be associated with categories for better organization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Skill'
      description: |-
        Update an existing skill's information. You can modify the skill names (Arabic/English)
        and change its category association. All fields are required for update.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the skill to update.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name_ar:
        name: name_ar
        description: 'The updated Arabic name of the skill. Must be unique and between 2-100 characters.'
        required: true
        example: '"تطوير تطبيقات PHP"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_en:
        name: name_en
        description: 'The updated English name of the skill. Must be unique and between 2-100 characters.'
        required: true
        example: '"PHP Application Development"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the category this skill should belong to. Must exist in categories table.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name_ar: '"تطوير تطبيقات PHP"'
      name_en: '"PHP Application Development"'
      category_id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Skill updated successfully",
            "data": {
              "id": 5,
              "name_ar": "تطوير تطبيقات PHP",
              "name_en": "PHP Application Development",
              "category_id": 2,
              "category": {
                "id": 2,
                "name_ar": "برمجة",
                "name_en": "Programming"
              },
              "created_at": "2024-01-18T16:45:22.000000Z",
              "updated_at": "2024-01-20T11:22:45.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Skill not found",
            "status": false,
            "error_num": 400,
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "This category is not a parent category",
            "status": false,
            "error_num": 400,
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated",
            "status": false,
            "error_num": 401,
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/skills/{id}'
    metadata:
      groupName: 'Admin Skills Management'
      groupDescription: |-

        APIs for managing skills in the system. Skills are used to categorize freelancer capabilities
        and can be associated with categories for better organization.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Skill'
      description: |-
        Permanently delete a skill from the system. This action cannot be undone.
        Make sure the skill is not being used by any freelancers before deletion.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the skill to delete.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Skill deleted successfully",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Skill not found",
            "status": false,
            "error_num": 400,
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated",
            "status": false,
            "error_num": 401,
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
