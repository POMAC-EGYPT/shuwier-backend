## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Admin Freelancer Management'
description: |-

  APIs for managing freelancers in the admin panel.
  These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
  including approving or rejecting freelancer applications.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/freelancers
    metadata:
      groupName: 'Admin Freelancer Management'
      groupDescription: |-

        APIs for managing freelancers in the admin panel.
        These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
        including approving or rejecting freelancer applications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of freelancers with optional filters.'
      description: |-
        This endpoint returns a paginated list of all freelancers in the system.
        Results can be filtered by approval status, active status, and name.
        The response includes pagination metadata for easy navigation.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      approval_status:
        name: approval_status
        description: 'Optional filter by approval status. Must be "requested" or "approved".'
        required: false
        example: requested
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Optional filter by active status. Must be 0 (inactive) or 1 (active).'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Optional filter by freelancer name (searches in name).'
        required: false
        example: أحمد
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Optional page number for pagination (default: 1).'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      approval_status: requested
      is_active: 1
      name: أحمد
      page: 2
    bodyParameters:
      approval_status:
        name: approval_status
        description: ''
        required: false
        example: approved
        type: string
        enumValues:
          - requested
          - approved
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: '1'
        type: string
        enumValues:
          - '0'
          - '1'
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      approval_status: approved
      is_active: '1'
      name: vmqeopfuudtdsufvyvddq
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Success",
            "data": [
              {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "type": "freelancer",
                "email_verified_at": "2025-08-24T10:30:00.000000Z",
                "phone": null,
                "is_active": true,
                "about_me": null,
                "profile_picture": null,
                "approval_status": "requested",
                "linkedin_link": "https://linkedin.com/in/johndoe",
                "twitter_link": "https://twitter.com/johndoe",
                "other_freelance_platform_links": ["https://upwork.com/freelancers/johndoe"],
                "portfolio_link": "https://johndoe.com",
                "headline": null,
                "description": null,
                "created_at": "2025-08-24T10:30:00.000000Z",
                "updated_at": "2025-08-24T10:30:00.000000Z"
              }
            ],
            "current_page": 1,
            "from": 1,
            "last_page": 5,
            "per_page": 10,
            "to": 10,
            "total": 50,
            "links": {
              "first": "http://localhost/api/admin/freelancers?page=1",
              "last": "http://localhost/api/admin/freelancers?page=5",
              "prev": null,
              "next": "http://localhost/api/admin/freelancers?page=2"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "The approval_status field must be one of: requested, approved."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": false,
            "error_num": 401,
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "error_num": 403,
            "message": "You don't have permission to access this resource"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/freelancers/{id}'
    metadata:
      groupName: 'Admin Freelancer Management'
      groupDescription: |-

        APIs for managing freelancers in the admin panel.
        These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
        including approving or rejecting freelancer applications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified freelancer details.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the freelancer to view.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Success",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "type": "freelancer",
              "email_verified_at": "2025-08-24T10:30:00.000000Z",
              "phone": null,
              "is_active": true,
              "about_me": null,
              "profile_picture": null,
              "approval_status": "requested",
              "linkedin_link": "https://linkedin.com/in/johndoe",
              "twitter_link": "https://twitter.com/johndoe",
              "other_freelance_platform_links": ["https://upwork.com/freelancers/johndoe"],
              "portfolio_link": "https://johndoe.com",
              "headline": null,
              "description": null,
              "created_at": "2025-08-24T10:30:00.000000Z",
              "updated_at": "2025-08-24T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "status": false,
            "error_num": 401,
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "error_num": 403,
            "message": "You don't have permission to access this resource"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "error_num": 404,
            "message": "Freelancer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/freelancers/{id}'
    metadata:
      groupName: 'Admin Freelancer Management'
      groupDescription: |-

        APIs for managing freelancers in the admin panel.
        These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
        including approving or rejecting freelancer applications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a freelancer account permanently.'
      description: |-
        This endpoint allows admins to permanently delete a freelancer account from the system.
        This action cannot be undone and will remove all associated data including profile information.
        Use with caution as this is a destructive operation.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the freelancer to delete.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Freelancer deleted successfully"
          }
        headers: []
        description: 'Freelancer deleted successfully'
        custom: []
      -
        status: 401
        content: |-
          {
            "status": false,
            "error_num": 401,
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "error_num": 403,
            "message": "You don't have permission to access this resource"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "error_num": 404,
            "message": "Freelancer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/freelancers/approve-reject/{id}'
    metadata:
      groupName: 'Admin Freelancer Management'
      groupDescription: |-

        APIs for managing freelancers in the admin panel.
        These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
        including approving or rejecting freelancer applications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve or Reject a freelancer application.'
      description: |-
        This endpoint allows admins to approve or reject freelancer applications.
        When approving, the freelancer receives an email notification and can start working.
        When rejecting, the freelancer account is permanently deleted.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the freelancer to approve/reject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      action:
        name: action
        description: 'The action to perform. Must be either "approve" or "reject".'
        required: true
        example: approve
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      action: approve
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Freelancer approved successfully",
            "data": {
              "id": 14,
              "name": "احمد حسني",
              "email": "abdelrahmanelghonemypomac@gmail.com",
              "type": "freelancer",
              "email_verified_at": "2025-08-26T09:09:53.000000Z",
              "phone": null,
              "is_active": true,
              "about_me": null,
              "profile_picture": null,
              "approval_status": "approved",
              "linkedin_link": "https://www.linkedin.com/in/muhammed-yousry96?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base%3BXWDAHlI8QB2HsM6PFNaclA%3D%3D",
              "twitter_link": "https://www.facebook.com/ahmedhosni516",
              "other_freelance_platform_links": [
                "https://www.google.com",
                "https://www.google.com"
              ],
              "portfolio_link": "https://www.facebook.com/ahmedhosni516",
              "headline": null,
              "description": null,
              "created_at": "2025-08-26T09:09:53.000000Z",
              "updated_at": "2025-08-27T08:49:50.000000Z"
            }
          }
        headers: []
        description: 'Freelancer approved successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Freelancer rejected successfully"
          }
        headers: []
        description: 'Freelancer rejected successfully'
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "Freelancer already approved"
          }
        headers: []
        description: 'Freelancer already approved'
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "The action field is required."
          }
        headers: []
        description: 'Invalid action parameter'
        custom: []
      -
        status: 401
        content: |-
          {
            "status": false,
            "error_num": 401,
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "error_num": 403,
            "message": "You don't have permission to access this resource"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "error_num": 404,
            "message": "Freelancer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/freelancers/block-unblock/{id}'
    metadata:
      groupName: 'Admin Freelancer Management'
      groupDescription: |-

        APIs for managing freelancers in the admin panel.
        These endpoints allow administrators to view, create, delete, and manage freelancer accounts,
        including approving or rejecting freelancer applications.
      subgroup: ''
      subgroupDescription: ''
      title: 'Block or Unblock a freelancer account.'
      description: |-
        This endpoint allows admins to toggle the active status of a freelancer account.
        When blocked (is_active = false), the freelancer cannot log in or access the platform.
        When unblocked (is_active = true), the freelancer can resume normal platform activities.
        This is a reversible action unlike deletion.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Accept-Language: en
    urlParameters:
      id:
        name: id
        description: 'The ID of the freelancer to block/unblock.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Freelancer blocked successfully"
          }
        headers: []
        description: 'Freelancer blocked successfully'
        custom: []
      -
        status: 200
        content: |-
          {
            "status": true,
            "error_num": null,
            "message": "Freelancer unblocked successfully"
          }
        headers: []
        description: 'Freelancer unblocked successfully'
        custom: []
      -
        status: 400
        content: |-
          {
            "status": false,
            "error_num": 400,
            "message": "Cannot block/unblock unapproved freelancer"
          }
        headers: []
        description: 'Freelancer not approved yet'
        custom: []
      -
        status: 401
        content: |-
          {
            "status": false,
            "error_num": 401,
            "message": "Unauthenticated"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "error_num": 403,
            "message": "You don't have permission to access this resource"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "status": false,
            "error_num": 404,
            "message": "Freelancer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
